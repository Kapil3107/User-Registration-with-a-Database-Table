[{"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/index.js":"1","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/App.js":"2","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/reportWebVitals.js":"3","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/Submit.js":"4","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/store.js":"5","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/Users.js":"6","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/components/AppForm.js":"7","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/actions/infoActions.js":"8","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/reducers/index.js":"9","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/actions/types.js":"10","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/actions/errorActions.js":"11","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/reducers/infoReducer.js":"12","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/reducers/errorReducer.js":"13","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/components/AppNavbar1.js":"14","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/components/AppNavbar2.js":"15","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/components/FormInput.js":"16"},{"size":1192,"mtime":1611597772725,"results":"17","hashOfConfig":"18"},{"size":373,"mtime":1611597287007,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1610213426007,"results":"20","hashOfConfig":"18"},{"size":1212,"mtime":1612707896406,"results":"21","hashOfConfig":"18"},{"size":418,"mtime":1611922408628,"results":"22","hashOfConfig":"18"},{"size":8049,"mtime":1612709129237,"results":"23","hashOfConfig":"18"},{"size":7776,"mtime":1612722901869,"results":"24","hashOfConfig":"18"},{"size":1104,"mtime":1611659948246,"results":"25","hashOfConfig":"18"},{"size":209,"mtime":1611379669003,"results":"26","hashOfConfig":"18"},{"size":257,"mtime":1611659319711,"results":"27","hashOfConfig":"18"},{"size":315,"mtime":1610980651728,"results":"28","hashOfConfig":"18"},{"size":746,"mtime":1612367354247,"results":"29","hashOfConfig":"18"},{"size":519,"mtime":1612367984563,"results":"30","hashOfConfig":"18"},{"size":1122,"mtime":1612723422487,"results":"31","hashOfConfig":"18"},{"size":1117,"mtime":1612709384636,"results":"32","hashOfConfig":"18"},{"size":940,"mtime":1612648455311,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"w2hc6e",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/index.js",[],["70","71"],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/App.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/reportWebVitals.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/Submit.js",["72","73"],"import React, { Component } from \"react\";\nimport \"./Submit.css\";\nimport Register_Success from \"./images/Register_Success.png\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { withRouter } from \"react-router-dom\";\n\nclass Submit extends Component {\n  onClick1 = () => {\n    this.props.history.push(\"/users\");\n  };\n\n  onClick2 = () => {\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    return (\n      <div className=\"mainBody\">\n        <div class=\"body\"></div>\n        <div class=\"chat\">\n          <div class=\"profile\">\n            <img src={Register_Success} alt=\"\" />\n          </div>\n          <div class=\"message\">Hurray! You have successfully registered</div>\n          <div class=\"user\">\n            <a className=\"a\" onClick={this.onClick2}>\n              <FontAwesomeIcon icon={[\"fas\", \"angle-double-left\"]} /> Go back to\n              the register page\n            </a>\n            <br></br>\n            <a className=\"a\" onClick={this.onClick1}>\n              <FontAwesomeIcon icon={[\"fas\", \"angle-double-right\"]} /> See all\n              the registered users\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Submit);\n","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/store.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/Users.js",["74","75","76","77","78","79","80"],"import React, { useEffect } from \"react\";\nimport \"./Users.css\";\nimport { Container } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getInfos } from \"./actions/infoActions\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  useTable,\n  useFilters,\n  useGlobalFilter,\n  useAsyncDebounce,\n  usePagination,\n  useSortBy,\n} from \"react-table\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AppNavbar2 from \"./components/AppNavbar2\";\n\n// Define a default UI for filtering\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n}) {\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n\n  return (\n    <span>\n      <div className=\"top\">\n        Search:{\" \"}\n        <input\n          className=\"form-control\"\n          value={value || \"\"}\n          onChange={(e) => {\n            setValue(e.target.value);\n            onChange(e.target.value);\n          }}\n          placeholder={`${count} records...`}\n        />\n      </div>\n    </span>\n  );\n}\n\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length;\n\n  return (\n    <input\n      className=\"form-control\"\n      value={filterValue || \"\"}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined);\n      }}\n      placeholder={`Search ${count} records...`}\n    />\n  );\n}\n\nfunction Table({ columns, data }) {\n  const defaultColumn = React.useMemo(\n    () => ({\n      // Default Filter UI\n      Filter: DefaultColumnFilter,\n    }),\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    state,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      initialState: { pageIndex: 0, pageSize: 5 },\n    },\n    useFilters,\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  return (\n    <div>\n      <div>\n        <GlobalFilter\n          preGlobalFilteredRows={preGlobalFilteredRows}\n          globalFilter={state.globalFilter}\n          setGlobalFilter={setGlobalFilter}\n        />\n        <table striped className=\"table\" {...getTableProps()}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {column.render(\"Header\")}\n                    {/* Render the columns filter UI */}\n                    <div>\n                      {column.canFilter ? column.render(\"Filter\") : null}\n                    </div>\n                    {/* Add a sort direction indicator */}\n                    <span>\n                      {column.isSorted ? (column.isSortedDesc ? \" \" : \" \") : \"\"}\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {page.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      <div>\n        <ul className=\"pagination\">\n          <li\n            className=\"page-item\"\n            onClick={() => gotoPage(0)}\n            disabled={!canPreviousPage}\n          >\n            <a className=\"page-link\">First</a>\n          </li>\n          <li\n            className=\"page-item\"\n            onClick={() => previousPage()}\n            disabled={!canPreviousPage}\n          >\n            <a className=\"page-link\">{\"<\"}</a>\n          </li>\n          <li\n            className=\"page-item\"\n            onClick={() => nextPage()}\n            disabled={!canNextPage}\n          >\n            <a className=\"page-link\">{\">\"}</a>\n          </li>\n          <li\n            className=\"page-item\"\n            onClick={() => gotoPage(pageCount - 1)}\n            disabled={!canNextPage}\n          >\n            <a className=\"page-link\">Last</a>\n          </li>\n          <li>\n            <a className=\"page-link\">\n              Page{\" \"}\n              <strong>\n                {pageIndex + 1} of {pageOptions.length}\n              </strong>{\" \"}\n            </a>\n          </li>\n          <li>\n            <a className=\"page-link\">\n              <input\n                className=\"form-control page-index\"\n                type=\"number\"\n                defaultValue={pageIndex + 1}\n                onChange={(e) => {\n                  const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                  gotoPage(page);\n                }}\n              />\n            </a>\n          </li>{\" \"}\n          <select\n            className=\"form-control page-size\"\n            value={pageSize}\n            onChange={(e) => {\n              setPageSize(Number(e.target.value));\n            }}\n          >\n            {[5, 10, 20, 30, 40, 50].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </select>\n        </ul>\n      </div>\n      <div></div>\n    </div>\n  );\n}\n\nfunction Users(props) {\n  useEffect(() => {\n    props.getInfos();\n  }, []);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Full Name\",\n        columns: [\n          {\n            Header: () => {\n              return (\n                <div>\n                  Name{\" \"}\n                  <FontAwesomeIcon className=\"icon\" icon={[\"fas\", \"sort\"]} />\n                </div>\n              );\n            },\n            accessor: \"name\",\n          },\n        ],\n      },\n      {\n        Header: \"Info\",\n        columns: [\n          {\n            Header: \"Email\",\n            accessor: \"email\",\n          },\n          {\n            Header: \"Phone Number\",\n            accessor: \"phoneNo\",\n          },\n          {\n            Header: \"Date of Birth\",\n            accessor: \"dateOfBirth\",\n          },\n          {\n            Header: () => {\n              return (\n                <div>\n                  Gender{\" \"}\n                  <FontAwesomeIcon className=\"icon\" icon={[\"fas\", \"sort\"]} />\n                </div>\n              );\n            },\n            accessor: \"gender\",\n          },\n          {\n            Header: () => {\n              return (\n                <div>\n                  Education{\" \"}\n                  <FontAwesomeIcon className=\"icon\" icon={[\"fas\", \"sort\"]} />\n                </div>\n              );\n            },\n            accessor: \"education\",\n          },\n        ],\n      },\n    ],\n    []\n  );\n\n  const data = props.info.infos.map(function ({\n    name,\n    email,\n    phoneNo,\n    dateOfBirth,\n    gender,\n    education,\n  }) {\n    return {\n      name: name,\n      email: email,\n      phoneNo: phoneNo,\n      dateOfBirth: dateOfBirth,\n      gender: gender,\n      education: education,\n    };\n  });\n\n  return (\n    <div>\n      <div>\n        <AppNavbar2 />\n      </div>\n      <Container>\n        <Table columns={columns} data={data} />\n      </Container>\n    </div>\n  );\n}\n\nUsers.propTypes = {\n  getInfos: PropTypes.func.isRequired,\n  info: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  info: state.info,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getInfos: () => dispatch(getInfos()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\n","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/components/AppForm.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/actions/infoActions.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/reducers/index.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/actions/types.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/actions/errorActions.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/reducers/infoReducer.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/reducers/errorReducer.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/components/AppNavbar1.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/components/AppNavbar2.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/components/FormInput.js",["81"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Label, Input } from \"reactstrap\";\n\nconst FormInput = ({\n  name,\n  type,\n  placeholder,\n  onChange,\n  className,\n  value,\n  label,\n}) => {\n  return (\n    <React.Fragment>\n      <Label htmlFor={name}>\n        {label} <span className=\"asterisk\">*</span>\n      </Label>\n      <Input\n        id={name}\n        name={name}\n        type={type}\n        placeholder={placeholder}\n        onChange={onChange}\n        value={value}\n        className={className}\n      />\n    </React.Fragment>\n  );\n};\n\nFormInput.defaultProps = {\n  type: \"text\",\n  className: \"\",\n};\n\nFormInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.oneOf([\"text\", \"number\", \"password\"]),\n  className: PropTypes.string,\n  value: PropTypes.any,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default FormInput;\n",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":27,"column":13,"nodeType":"88","endLine":27,"endColumn":54},{"ruleId":"86","severity":1,"message":"87","line":32,"column":13,"nodeType":"88","endLine":32,"endColumn":54},{"ruleId":"86","severity":1,"message":"87","line":159,"column":13,"nodeType":"88","endLine":159,"endColumn":38},{"ruleId":"86","severity":1,"message":"87","line":166,"column":13,"nodeType":"88","endLine":166,"endColumn":38},{"ruleId":"86","severity":1,"message":"87","line":173,"column":13,"nodeType":"88","endLine":173,"endColumn":38},{"ruleId":"86","severity":1,"message":"87","line":180,"column":13,"nodeType":"88","endLine":180,"endColumn":38},{"ruleId":"86","severity":1,"message":"87","line":183,"column":13,"nodeType":"88","endLine":183,"endColumn":38},{"ruleId":"86","severity":1,"message":"87","line":191,"column":13,"nodeType":"88","endLine":191,"endColumn":38},{"ruleId":"89","severity":1,"message":"90","line":226,"column":6,"nodeType":"91","endLine":226,"endColumn":8,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":42,"column":3,"nodeType":"95","messageId":"96","endLine":42,"endColumn":7},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["99"],"no-dupe-keys","Duplicate key 'type'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [props]",{"range":"102","text":"103"},[5859,5861],"[props]"]