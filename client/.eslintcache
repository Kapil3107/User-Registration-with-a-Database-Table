[{"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/index.js":"1","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/App.js":"2","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/reportWebVitals.js":"3","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/Submit.js":"4","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/store.js":"5","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/Users.js":"6","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/components/AppForm.js":"7","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/actions/infoActions.js":"8","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/reducers/index.js":"9","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/actions/types.js":"10","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/actions/errorActions.js":"11","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/reducers/infoReducer.js":"12","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/reducers/errorReducer.js":"13","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/components/AppNavbar1.js":"14","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/components/AppNavbar2.js":"15"},{"size":1192,"mtime":1611597772725,"results":"16","hashOfConfig":"17"},{"size":373,"mtime":1611597287007,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1610213426007,"results":"19","hashOfConfig":"17"},{"size":1332,"mtime":1611599607103,"results":"20","hashOfConfig":"17"},{"size":394,"mtime":1610275775245,"results":"21","hashOfConfig":"17"},{"size":10056,"mtime":1611598127023,"results":"22","hashOfConfig":"17"},{"size":13252,"mtime":1611601820112,"results":"23","hashOfConfig":"17"},{"size":1104,"mtime":1611659948246,"results":"24","hashOfConfig":"17"},{"size":209,"mtime":1611379669003,"results":"25","hashOfConfig":"17"},{"size":257,"mtime":1611659319711,"results":"26","hashOfConfig":"17"},{"size":315,"mtime":1610980651728,"results":"27","hashOfConfig":"17"},{"size":899,"mtime":1611659364007,"results":"28","hashOfConfig":"17"},{"size":599,"mtime":1611597805836,"results":"29","hashOfConfig":"17"},{"size":1320,"mtime":1611599851976,"results":"30","hashOfConfig":"17"},{"size":1315,"mtime":1611599828872,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"12jqna5",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/index.js",[],["65","66"],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/App.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/reportWebVitals.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/Submit.js",["67","68"],"import React, { Component } from 'react'\nimport './Submit.css';\nimport Register_Success from './images/Register_Success.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { withRouter } from 'react-router-dom';\n\nclass Submit extends Component {\n    onClick1 = () => {\n        this.props.history.push('/users');\n    }\n\n    onClick2 = () => {\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <div className=\"mainBody\">\n                <div class=\"body\"></div>\n                <div class=\"chat\">\n                    <div class=\"profile\">\n                        <img src={Register_Success} alt='' />\n                    </div>\n                    <div class=\"message\">\n                        Hurray! You have successfully registered\n                    </div>\n                    <div class=\"user\">\n                        <a className=\"a\" onClick={this.onClick2}><FontAwesomeIcon icon={['fas', 'angle-double-left']} /> Go back to the register page</a>\n                        <br></br>\n                        <a className=\"a\" onClick={this.onClick1}><FontAwesomeIcon icon={['fas', 'angle-double-right']} /> See all the registered users</a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Submit);","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/store.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/Users.js",["69","70","71","72","73","74","75"],"import React, { useEffect } from \"react\";\nimport { Container } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getInfos } from './actions/infoActions';\nimport PropTypes from 'prop-types';\n\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce, usePagination, useSortBy } from 'react-table'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AppNavbar2 from \"./components/AppNavbar2\";\n\n// Define a default UI for filtering\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n}) {\n    const count = preGlobalFilteredRows.length\n    const [value, setValue] = React.useState(globalFilter)\n    const onChange = useAsyncDebounce(value => {\n        setGlobalFilter(value || undefined)\n    }, 200)\n\n    return (\n        <span>\n            <div style={{ marginTop: '25px' }}>\n                Search:{' '}\n                <input\n                    className=\"form-control\"\n                    value={value || \"\"}\n                    onChange={e => {\n                        setValue(e.target.value);\n                        onChange(e.target.value);\n                    }}\n                    placeholder={`${count} records...`}\n                />\n            </div>\n        </span>\n    )\n}\n\nfunction DefaultColumnFilter({\n    column: { filterValue, preFilteredRows, setFilter },\n}) {\n    const count = preFilteredRows.length\n\n    return (\n        <input\n            className=\"form-control\"\n            value={filterValue || ''}\n            onChange={e => {\n                setFilter(e.target.value || undefined)\n            }}\n            placeholder={`Search ${count} records...`}\n        />\n    )\n}\n\nfunction Table({ columns, data }) {\n\n    const defaultColumn = React.useMemo(\n        () => ({\n            // Default Filter UI\n            Filter: DefaultColumnFilter,\n        }),\n        []\n    )\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        state,\n        preGlobalFilteredRows,\n        setGlobalFilter,\n        page,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: { pageIndex, pageSize },\n    } = useTable(\n        {\n            columns,\n            data,\n            defaultColumn,\n            initialState: { pageIndex: 0, pageSize: 5 }\n        },\n        useFilters,\n        useGlobalFilter,\n        useSortBy,\n        usePagination\n    )\n\n    return (\n        <div>\n            <div>\n                <GlobalFilter\n                    preGlobalFilteredRows={preGlobalFilteredRows}\n                    globalFilter={state.globalFilter}\n                    setGlobalFilter={setGlobalFilter}\n                />\n                <table striped className=\"table\" {...getTableProps()}>\n                    <thead>\n                        {headerGroups.map(headerGroup => (\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {headerGroup.headers.map(column => (\n                                    <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                        {column.render('Header')}\n                                        {/* Render the columns filter UI */}\n                                        <div>{column.canFilter ? column.render('Filter') : null}</div>\n                                        {/* Add a sort direction indicator */}\n                                        <span>\n                                            {column.isSorted\n                                                ? column.isSortedDesc\n                                                    ? ' '\n                                                    : ' '\n                                                : ''}\n                                        </span>\n                                    </th>\n                                ))}\n                            </tr>\n                        ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                        {page.map((row, i) => {\n                            prepareRow(row)\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {row.cells.map(cell => {\n                                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                    })}\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n            <div>\n                <ul className=\"pagination\">\n                    <li className=\"page-item\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                        <a style={{ color: 'black' }} className=\"page-link\">First</a>\n                    </li>\n                    <li className=\"page-item\" onClick={() => previousPage()} disabled={!canPreviousPage}>\n                        <a style={{ color: 'black' }} className=\"page-link\">{'<'}</a>\n                    </li>\n                    <li className=\"page-item\" onClick={() => nextPage()} disabled={!canNextPage}>\n                        <a style={{ color: 'black' }} className=\"page-link\">{'>'}</a>\n                    </li>\n                    <li className=\"page-item\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                        <a style={{ color: 'black' }} className=\"page-link\">Last</a>\n                    </li>\n                    <li>\n                        <a style={{ color: 'black' }} className=\"page-link\">\n                            Page{' '}\n                            <strong>\n                                {pageIndex + 1} of {pageOptions.length}\n                            </strong>{' '}\n                        </a>\n                    </li>\n                    <li>\n                        <a className=\"page-link\">\n                            <input\n                                className=\"form-control\"\n                                type=\"number\"\n                                defaultValue={pageIndex + 1}\n                                onChange={e => {\n                                    const page = e.target.value ? Number(e.target.value) - 1 : 0\n                                    gotoPage(page)\n                                }}\n                                style={{ width: '100px', height: '20px' }}\n                            />\n                        </a>\n                    </li>{' '}\n                    <select\n                        className=\"form-control\"\n                        value={pageSize}\n                        onChange={e => {\n                            setPageSize(Number(e.target.value))\n                        }}\n                        style={{ width: '120px', height: '38px' }}\n                    >\n                        {[5, 10, 20, 30, 40, 50].map(pageSize => (\n                            <option key={pageSize} value={pageSize}>\n                                Show {pageSize}\n                            </option>\n                        ))}\n                    </select>\n                </ul>\n            </div>\n            <div>\n\n            </div>\n        </div>\n    )\n}\n\nfunction Users(props) {\n\n    useEffect(() => {\n        props.getInfos();\n    }, [])\n\n    const columns = React.useMemo(\n        () => [\n            {\n                Header: 'Full Name',\n                columns: [\n                    {\n                        Header: () => {\n                            return <div>Name <FontAwesomeIcon style={{ color: 'grey' }} icon={['fas', 'sort']} /></div>\n                        },\n                        accessor: 'name'\n                    }\n                ]\n            },\n            {\n                Header: 'Info',\n                columns: [\n                    {\n                        Header: 'Email',\n                        accessor: 'email'\n                    },\n                    {\n                        Header: 'Phone Number',\n                        accessor: 'phoneNo'\n                    },\n                    {\n                        Header: 'Date of Birth',\n                        accessor: 'dateOfBirth'\n                    },\n                    {\n                        Header: () => {\n                            return <div>Gender <FontAwesomeIcon style={{ color: 'grey' }} icon={['fas', 'sort']} /></div>\n                        },\n                        accessor: 'gender'\n                    },\n                    {\n                        Header: () => {\n                            return <div>Education <FontAwesomeIcon style={{ color: 'grey' }} icon={['fas', 'sort']} /></div>\n                        },\n                        accessor: 'education'\n                    }\n                ]\n            },\n        ],\n        []\n    )\n\n    const data =\n        props.info.infos.map(function ({ name, email, phoneNo, dateOfBirth, gender, education }) {\n            return (\n                {\n                    \"name\": name.toLowerCase(),\n                    \"email\": email,\n                    \"phoneNo\": phoneNo,\n                    \"dateOfBirth\": dateOfBirth,\n                    \"gender\": gender,\n                    \"education\": education\n                }\n            );\n        })\n\n\n    return (\n        <div>\n            <div>\n                <AppNavbar2 />\n            </div>\n            <Container>\n                <Table columns={columns} data={data} />\n            </Container>\n        </div>\n    )\n}\n\nUsers.propTypes = {\n    getInfos: PropTypes.func.isRequired,\n    info: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    info: state.info\n});\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getInfos: () => dispatch(getInfos())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/components/AppForm.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/actions/infoActions.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/reducers/index.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/actions/types.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/actions/errorActions.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/reducers/infoReducer.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/reducers/errorReducer.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/components/AppNavbar1.js",[],"/Users/lucky/Desktop/PROJECTS/User Registration with a Database Table/client/src/components/AppNavbar2.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":29,"column":25,"nodeType":"82","endLine":29,"endColumn":66},{"ruleId":"80","severity":1,"message":"81","line":31,"column":25,"nodeType":"82","endLine":31,"endColumn":66},{"ruleId":"80","severity":1,"message":"81","line":148,"column":25,"nodeType":"82","endLine":148,"endColumn":77},{"ruleId":"80","severity":1,"message":"81","line":151,"column":25,"nodeType":"82","endLine":151,"endColumn":77},{"ruleId":"80","severity":1,"message":"81","line":154,"column":25,"nodeType":"82","endLine":154,"endColumn":77},{"ruleId":"80","severity":1,"message":"81","line":157,"column":25,"nodeType":"82","endLine":157,"endColumn":77},{"ruleId":"80","severity":1,"message":"81","line":160,"column":25,"nodeType":"82","endLine":160,"endColumn":77},{"ruleId":"80","severity":1,"message":"81","line":168,"column":25,"nodeType":"82","endLine":168,"endColumn":50},{"ruleId":"83","severity":1,"message":"84","line":208,"column":8,"nodeType":"85","endLine":208,"endColumn":10,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [props]",{"range":"92","text":"93"},[7499,7501],"[props]"]